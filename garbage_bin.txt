//operator =
	Car operator=(const Car& source) {
		this->name = source.name;
		this->year = source.year;
		this->engine = source.engine;
		return *this;
	}

	EventType eventType = EventType::Movie;
	int numberOfRows = 0;
	int numberfOfSeatsPerRow = 0;
	ZoneType zone = ZoneType::Category1;
	//CHARACTERISTICS OF THE EVENT
	std::string name = "Event Name";
	std::string date = "20/01/2011";
	std::string time = "20:00";
	int numberOfDigitsInID = 10; //trebuie initializat??
	char* uniqueID = nullptr;
	const int eventPrice = 0;

	delete[] this->name;
		this->setName(string(source.name));


std::ostream& operator<<(std::ostream& console, const Car& newCar) {
	console << "NAME: " << newCar.name;
	console << std::endl << "YEAR: " << newCar.year;
	console << std::endl << "ENGINE: " << newCar.engine;
	return console;
}

std::istream& operator>>(std::istream& console, Car& newCar) {
	console >> newCar.name;
	console >> newCar.year;
	console >> newCar.engine;
	return console;
}


	std::string name;
	int age;
	std::string emailAddress;
	Concession concession;

	EventType eventType = EventType::Movie;
	int numberOfRows = 0;
	int numberfOfSeatsPerRow = 0;
	ZoneType zone = ZoneType::Category1;
	//CHARACTERISTICS OF THE EVENT
	std::string name = "Event Name";
	std::string date = "20/01/2011";
	std::string time = "20:00";
	int numberOfDigitsInID = 10; //trebuie initializat??
	char* uniqueID = nullptr;
	const int eventPrice = 0;

	price

	User(const User& newUser) {
		this->name = newUser.name;
		this->age = newUser.age;
		this->emailAddress = newUser.emailAddress;
		this->concession = newUser.concession;
	}

	ZoneType zone = ZoneType::Category1;
	int numberOfDigitsInID = 10;
	char* uniqueID = nullptr;
	int rowNumber = 1;
	int seatNumber = 1;


	EventType eventType = EventType::Movie;
	int numberOfRows = 0;
	int numberfOfSeatsPerRow = 0;
	//CHARACTERISTICS OF THE EVENT
	std::string name = "Event Name";
	char* nameEvent = nullptr;
	std::string date = "20/01/2011";
	std::string time = "20:00";
	char year[5] = "2010";
	const int eventPrice = 0;
	bool isBigEvent = false;

	EventType eventType = EventType::Movie;
	int numberOfRows = 0;
	int numberfOfSeatsPerRow = 0;
	//CHARACTERISTICS OF THE EVENT
	std::string name = "Event Name";
	char* nameEvent = nullptr;
	std::string date = "20/01/2011";
	std::string time = "20:00";
	char year[5] = "2010";
	const int eventPrice = 0;
	bool isBigEvent = false;

	/*myEvent.setLocation(tks[1]);
			myEvent.setVenue(tks[2]);
			myEvent.setDate(tks[3]);
			myEvent.setTime(tks[4]);*/
	//	myIntVariable = std::stoi(tks[5]);
	//	myIntVariable = std::stoi(tks[6]);
	//	myIntVariable = std::stoi(tks[7]);


	Home Alone 2, Bucharest, 
	Afi Palace Cotroceni, 20/08/2023, 18:00, 7, 8, 20,


Event(EventType newEventType, std::string newName,
std::string newLocation, std::string newVenue, 
std::string newDate, std::string newTime, int newNumberOfRows, 
int newNumberOfSeatsPerRow) {

setEventType(newEventType);
setName(newName);
setLocation(newLocation);
setVenue(newVenue);
setDate(newDate);
setVenue(newVenue);
setNumberOfRows(newNumberOfRows);
setNumberOfSeatsPerRow(newNumberOfSeatsPerRow);

std::string name = "John Doe";
char* nameUser = nullptr;
int age = 17;
char birthYear[5] = "2000";
std::string emailAddress = "john.doe23@gmail.com";
Concession concession = Concession::Standard;
double price = 100;
bool isAdult = false;

ZoneType zone = ZoneType::Category1;
	int numberOfDigitsInID = 10;
	char* uniqueID = nullptr;
	int rowNumber = 2;
	int seatNumber = 1;
	char personalisedMessage[30] = "Have fun at your event!";
	bool isFirstRow = false;

	std::string name = "John Doe";
	int age = 17;
	char birthYear[5] = "2000";
	std::string emailAddress = "john.doe23@gmail.com";
	Concession concession = Concession::Standard;
	bool isAdult = false;

 Standard, Teen = 30, Retired = 40, Child = 50

 Number Of Rows: 43
Number of Seats per Row: 0
Name: Titanic
Date:  21/10/2023
Time:  18:30
Event Price: 0

ZoneType zone = ZoneType::Category1;
	int numberOfDigitsInID = 10;
	char* uniqueID = nullptr;
	int rowNumber = 2;
	int seatNumber = 1;
	char personalisedMessage[30] = "Have fun at your event!";
	bool isFirstRow = false;